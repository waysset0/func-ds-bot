import disnake
from disnake.ext import commands

from config import settings

import pyfiglet

class Other(commands.Cog):

    def __init__(self, bot):
        self.bot = bot

    # –ê–í–ê–¢–ê–†
    @commands.slash_command(description="–ü–æ–ª—É—á–∏—Ç—å –∞–≤–∞—Ç–∞—Ä–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
    async def avatar(self, ctx, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: disnake.Member = commands.Param(None, description="–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")):
        # –ï—Å–ª–∏ –Ω–µ —É–∫–∞–∑–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å (member), –∏—Å–ø–æ–ª—å–∑—É–µ–º –∞–≤—Ç–æ—Ä–∞ –∫–æ–º–∞–Ω–¥—ã.
        member = –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å or ctx.author
        # –°–æ–∑–¥–∞–µ–º —ç–º–±–µ–¥ (–≤–ª–æ–∂–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ) —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –∞–≤–∞—Ç–∞—Ä–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
        embed = disnake.Embed(
            title = f"–ê–≤–∞—Ç–∞—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ‚Äì {member}",
            color = settings['color']
        )
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ (–∞–≤–∞—Ç–∞—Ä) –≤ —ç–º–±–µ–¥.
        embed.set_image(url = member.display_avatar)
        embed.set_footer(text = f"–ó–∞–ø—Ä–æ—Å–∏–ª: {ctx.author.name}", icon_url = ctx.author.display_avatar.url)
        await ctx.response.send_message(embed=embed)

    # –ü–ò–°–ê–¢–¨ –û–¢ –ë–û–¢–ê
    @commands.slash_command(description="–ü–∏—Å–∞—Ç—å –æ—Ç –∏–º–µ–Ω–∏ –±–æ—Ç–∞")
    async def say(self, ctx, —Ç–µ–∫—Å—Ç: str = commands.Param(description="–ù–∞–ø–∏—à–∏—Ç–µ —Ç–µ–∫—Å—Ç")):
        try:
            if "@" in —Ç–µ–∫—Å—Ç:
                embed = disnake.Embed(
                    title = "‚ùå –û—à–∏–±–∫–∞",
                    description = "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–æ –º–æ–π —Å–æ–∑–¥–∞—Ç–µ–ª—å –∑–∞–ø—Ä–µ—Ç–∏–ª –º–Ω–µ —É–ø–æ–º–∏–Ω–∞—Ç—å –∫–æ–≥–æ-–ª–∏–±–æ!",
                    color = disnake.Color.red())
                await ctx.send(embed = embed, ephemeral = True)
            else:
                await ctx.send(—Ç–µ–∫—Å—Ç)
        except:
            embed = disnake.Embed(
                    title = "‚ùå –û—à–∏–±–∫–∞",
                    description = "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–æ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞!",
                    color = disnake.Color.red())
            await ctx.send(embed = embed, ephemeral = True)

    @commands.cooldown(1, 10800, commands.BucketType.user)
    @commands.slash_command(description = '–û–±—Ä–∞—â–µ–Ω–∏–µ')
    async def report(self, inter, *, –æ–±—Ä–∞—â–µ–Ω–∏–µ: str = commands.Param(description = '–ù–∞–ø–∏—à–∏—Ç–µ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ')):
        try:
            guild = self.bot.get_guild(1205922933256753213)
            channel = await guild.fetch_channel(1217037532165046274)
            embed = disnake.Embed(
                title = '‚ö† –ù–æ–≤–æ–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ',
                description = f'–¢–µ–∫—Å—Ç –æ–±—Ä–∞—â–µ–Ω–∏—è: **{–æ–±—Ä–∞—â–µ–Ω–∏–µ}**',
                color = settings['color'])
            components = [
            disnake.ui.Button(style = disnake.ButtonStyle.secondary, label = f'{inter.author} ({inter.author.id})', disabled = True)]
            await channel.send(embed = embed, components = components)
            await inter.send("–°–ø–∞—Å–∏–±–æ –∑–∞ –æ–±—Ä–∞—â–µ–Ω–∏–µ! –í —Å–ª—É—á–∞–µ, –µ—Å–ª–∏ –í–∞—à–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ –æ–∫–∞–∂–µ—Ç—Å—è –ø–æ–ª–µ–∑–Ω—ã–º, —Ç–æ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–æ–±–∞–≤—è—Ç –í–∞–º —Ä–µ–ø—É—Ç–∞—Ü–∏—é! üíñ", ephemeral = True)
        except Exception as e:
            await inter.send(f'–æ—à–∏–±–∫–∞ **{e}**')

    @commands.slash_command(name = 'text-symbol', description = '–¢–µ–∫—Å—Ç —Å–∏–º–≤–æ–ª–∞–º–∏')
    async def text_symbol(self, inter, *, —Ç–µ–∫—Å—Ç: str = commands.Param(description = '–í–≤–µ–¥–∏—Ç–µ, –∂–µ–ª–∞–µ–º—ã–π —Ç–µ–∫—Å—Ç'), —Å—Ç–∏–ª—å: str = commands.Param(description="–í—ã–±–µ—Ä–∏—Ç–µ", choices=["Slant", "Graffiti", "Starwars", "Poison"])):
        try:

            if —Å—Ç–∏–ª—å == "Slant":
                ready_text = pyfiglet.figlet_format(—Ç–µ–∫—Å—Ç, font = "slant")

                embed = disnake.Embed(
                    description = f'```{ready_text}```',
                    color = settings['color'])
                await inter.send(embed = embed)
            elif —Å—Ç–∏–ª—å == "Graffiti":
                ready_text = pyfiglet.figlet_format(—Ç–µ–∫—Å—Ç, font = "graffiti")

                embed = disnake.Embed(
                    description = f'```{ready_text}```',
                    color = settings['color'])
                await inter.send(embed = embed)
            elif —Å—Ç–∏–ª—å == "Starwars":
                ready_text = pyfiglet.figlet_format(—Ç–µ–∫—Å—Ç, font = "starwars")

                embed = disnake.Embed(
                    description = f'```{ready_text}```',
                    color = settings['color'])
                await inter.send(embed = embed)
            elif —Å—Ç–∏–ª—å == "Poison":
                ready_text = pyfiglet.figlet_format(—Ç–µ–∫—Å—Ç, font = "poison")

                embed = disnake.Embed(
                    description = f'```{ready_text}```',
                    color = settings['color'])
                await inter.send(embed = embed)
        except Exception as e:
            await inter.send(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞!\n\n–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: ``{e}``")

def setup(bot):
    bot.add_cog(Other(bot))